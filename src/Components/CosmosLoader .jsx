import React, { useState, useEffect } from 'react';

const CosmosLoader = () => {
  const [currentStatus, setCurrentStatus] = useState(0);
  const statusMessages = [
    "Loading universe components",
    "Initializing 3D environment",
    "Preparing learning modules",
    "Rendering cosmic objects",
    "Finalizing your journey"
  ];

  // Create stars effect
  useEffect(() => {
    const starsContainer = document.getElementById('stars');
    if (starsContainer) {
      const starCount = 100;
      
      for (let i = 0; i < starCount; i++) {
        const star = document.createElement('div');
        star.classList.add('star');
        
        // Random position
        const x = Math.random() * 100;
        const y = Math.random() * 100;
        
        // Random size between 1-3px
        const size = Math.random() * 2 + 1;
        
        // Random animation delay
        const delay = Math.random() * 2;
        
        star.style.left = `${x}%`;
        star.style.top = `${y}%`;
        star.style.width = `${size}px`;
        star.style.height = `${size}px`;
        star.style.animationDelay = `${delay}s`;
        
        starsContainer.appendChild(star);
      }
    }
  }, []);

  // Update status text
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentStatus(prev => (prev + 1) % statusMessages.length);
    }, 2000);
    
    return () => clearInterval(interval);
  }, [statusMessages.length]);

  return (
    <div style={styles.body}>
      <div style={styles.container}>
        <h1 style={styles.title}>CosmosLearn</h1>
        <p style={styles.subtitle}>Exploring knowledge in 3D universe</p>
        
        <div style={styles.loaderContainer}>
          {/* Stars will be generated by useEffect */}
          <div id="stars" style={styles.stars}></div>
          
          {/* Orbiting planets */}
          <div style={styles.orbit1}>
            <div style={styles.planet1}></div>
            <div style={styles.planet2}></div>
          </div>
          
          <div style={styles.orbit2}>
            <div style={styles.planet3}></div>
            <div style={styles.planet4}></div>
          </div>
          
          {/* Central orb */}
          <div style={styles.centralOrb}></div>
        </div>
        
        <div style={styles.progressContainer}>
          <div style={styles.progressBar}></div>
        </div>
        
        <div style={styles.statusText}>{statusMessages[currentStatus]}</div>
        
        <div style={styles.loadingText}>
          Loading<span style={styles.dots}>
            <span style={styles.dot}>.</span>
            <span style={{...styles.dot, animationDelay: '0.5s'}}>.</span>
            <span style={{...styles.dot, animationDelay: '1s'}}>.</span>
          </span>
        </div>
      </div>
    </div>
  );
};

// Styles (converted from CSS to React inline styles)
const styles = {
  body: {
    margin: 0,
    padding: 0,
    boxSizing: 'border-box',
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
    background: 'linear-gradient(135deg, #0a0e2a 0%, #1a1f4b 100%)',
    color: '#fff',
    minHeight: '100vh',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    overflow: 'hidden'
  },
  container: {
    textAlign: 'center',
    zIndex: 10,
    padding: '2rem',
    borderRadius: '20px',
    background: 'rgba(8, 12, 36, 0.6)',
    backdropFilter: 'blur(10px)',
    boxShadow: '0 15px 35px rgba(0, 0, 0, 0.5)',
    width: '90%',
    maxWidth: '500px'
  },
  title: {
    fontSize: '2.5rem',
    marginBottom: '1rem',
    background: 'linear-gradient(90deg, #7e37d9, #5a9cf8, #7e37d9)',
    backgroundSize: '200% auto',
    WebkitBackgroundClip: 'text',
    WebkitTextFillColor: 'transparent',
    animation: 'gradient 3s linear infinite',
  },
  subtitle: {
    marginBottom: '1.5rem'
  },
  loaderContainer: {
    position: 'relative',
    width: '300px',
    height: '300px',
    margin: '0 auto'
  },
  stars: {
    position: 'absolute',
    width: '100%',
    height: '100%',
    top: 0,
    left: 0
  },
  star: {
    position: 'absolute',
    backgroundColor: 'white',
    borderRadius: '50%',
    animation: 'twinkle 2s infinite'
  },
  orbit1: {
    position: 'absolute',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -50%)',
    border: '1px solid rgba(255, 255, 255, 0.1)',
    borderRadius: '50%',
    width: '180px',
    height: '180px',
    animation: 'rotate 12s infinite linear'
  },
  orbit2: {
    position: 'absolute',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -50%)',
    border: '1px solid rgba(255, 255, 255, 0.1)',
    borderRadius: '50%',
    width: '240px',
    height: '240px',
    animation: 'rotate 18s infinite linear reverse'
  },
  planet1: {
    position: 'absolute',
    top: 0,
    left: '50%',
    width: '25px',
    height: '25px',
    background: 'linear-gradient(135deg, #ff6b6b, #c0392b)',
    boxShadow: '0 0 10px #ff6b6b',
    borderRadius: '50%',
    transform: 'translate(-50%, -50%)'
  },
  planet2: {
    position: 'absolute',
    top: '100%',
    left: '50%',
    width: '35px',
    height: '35px',
    background: 'linear-gradient(135deg, #f1c40f, #f39c12)',
    boxShadow: '0 0 10px #f1c40f',
    borderRadius: '50%',
    transform: 'translate(-50%, -50%)'
  },
  planet3: {
    position: 'absolute',
    top: '50%',
    left: 0,
    width: '20px',
    height: '20px',
    background: 'linear-gradient(135deg, #1abc9c, #16a085)',
    boxShadow: '0 0 10px #1abc9c',
    borderRadius: '50%',
    transform: 'translate(-50%, -50%)'
  },
  planet4: {
    position: 'absolute',
    top: '50%',
    left: '100%',
    width: '30px',
    height: '30px',
    background: 'linear-gradient(135deg, #9b59b6, #8e44ad)',
    boxShadow: '0 0 10px #9b59b6',
    borderRadius: '50%',
    transform: 'translate(-50%, -50%)'
  },
  centralOrb: {
    position: 'absolute',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -50%)',
    width: '80px',
    height: '80px',
    borderRadius: '50%',
    background: 'radial-gradient(circle at 30% 30%, #5a9cf8, #3a57b7)',
    boxShadow: '0 0 30px #5a9cf8, 0 0 60px #3a57b7',
    animation: 'pulse 2s infinite ease-in-out'
  },
  progressContainer: {
    width: '80%',
    height: '8px',
    background: 'rgba(255, 255, 255, 0.1)',
    borderRadius: '4px',
    margin: '30px auto',
    overflow: 'hidden'
  },
  progressBar: {
    height: '100%',
    width: '0%',
    background: 'linear-gradient(90deg, #7e37d9, #5a9cf8)',
    borderRadius: '4px',
    animation: 'loading 4s infinite'
  },
  statusText: {
    marginTop: '15px',
    fontSize: '1rem',
    color: '#5a9cf8'
  },
  loadingText: {
    fontSize: '1.2rem',
    marginTop: '20px',
    letterSpacing: '2px'
  },
  dots: {
    display: 'inline-block'
  },
  dot: {
    animation: 'dots 1.5s infinite',
    opacity: 0
  }
};

// Add the CSS animations to the document head
const styleSheet = document.createElement("style");
styleSheet.innerText = `
  @keyframes gradient {
    0% { background-position: 0% center; }
    100% { background-position: 200% center; }
  }
  
  @keyframes pulse {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.1); }
  }
  
  @keyframes rotate {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
  }
  
  @keyframes twinkle {
    0%, 100% { opacity: 0.2; }
    50% { opacity: 1; }
  }
  
  @keyframes loading {
    0% { width: 0%; }
    70% { width: 90%; }
    100% { width: 100%; }
  }
  
  @keyframes dots {
    0%, 100% { opacity: 0; }
    50% { opacity: 1; }
  }
  
  @media (max-width: 600px) {
    .loader-container {
      width: 250px;
      height: 250px;
    }
    
    .orbit-1 {
      width: 150px;
      height: 150px;
    }
    
    .orbit-2 {
      width: 200px;
      height: 200px;
    }
    
    h1 {
      font-size: 2rem;
    }
  }
`;
document.head.appendChild(styleSheet);

export default CosmosLoader;